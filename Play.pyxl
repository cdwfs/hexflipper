Play
════════════════════════════════════════════════════════════════════════

/** Clone of map for the game */
let map
let selection_sprite


enter(player_info, in_game_type)
────────────────────────────────────────────────────────────────────────

map = clone(game_board_map)
selection_sprite = game_board_map.spritesheet.selection

set_transform(xy(-16, SCREEN_SIZE.y + 8), xy(1, -1))


leave
────────────────────────────────────────────────────────────────────────
set_transform(xy(0, SCREEN_SIZE.y), xy(1, -1))


frame
────────────────────────────────────────────────────────────────────────

def draw_sprite_on_hex_map(sprite, map_coord):
    let pos = xy(
        MUL(HEX_WIDTH, MAD(½, map_coord.y bitand 1, map_coord.x)),
        MUL(HEX_HEIGHT_75, map_coord.y))
    draw_sprite(sprite, pos)    


// debug_watch(transform_ws_to_hex(touch.xy))
draw_hex_map(map)

let select_hex_pos = transform_ws_to_hex(touch.xy)
let select_map_coord = transform_hex_to_map_coord(nearest_hex(select_hex_pos))
debug_watch(select_map_coord)
draw_sprite_on_hex_map(selection_sprite, select_map_coord)

/*
let sprite = astronaut.idle[0]
if joy.x:
   flip.x = joy.x
   sprite = astronaut.run[⌊mode_frames / 10⌋ mod 2]
   pos.x = loop(pos.x + joy.x, SCREEN_SIZE.x)

// Sky
set_background(rgb(20%, 50%, 80%))
draw_text(font, CREDITS.title, xy(½ SCREEN_SIZE.x, 10), text_color, ∅, ∅, 0, 0)

// Ground
draw_corner_rect(xy(0, 140), xy(SCREEN_SIZE.x, SCREEN_SIZE.y - 139), #DDD)

// Shadow
draw_line(pos + xy(-4, 8), pos + xy(+4, 8), rgba(0, 0, 0, 20%))

// Alien
draw_sprite(sprite, pos, 0, flip)
*/